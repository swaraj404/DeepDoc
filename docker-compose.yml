version: '3.8'

services:
  deepdoc-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: deepdoc-app
    ports:
      - "8501:8501"
    environment:
      - DATABASE_PATH=/app/database
      - COLLECTION_NAME=pdf_embeddings
      - LOG_LEVEL=INFO
    env_file:
      - .env
    volumes:
      # Persistent database storage
      - ./database:/app/database
      - ./logs:/app/logs
      - ./backups:/app/backups
      # Optional: Mount PDFs directory if you have pre-existing files
      # - ./data:/app/data:ro
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - deepdoc-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching (uncomment if needed)
  redis:
    image: redis:7-alpine
    container_name: deepdoc-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - deepdoc-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: API service
  deepdoc-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: deepdoc-api
    ports:
      - "5000:5000"
    environment:
      - DATABASE_PATH=/app/database
      - COLLECTION_NAME=pdf_embeddings
      - LOG_LEVEL=INFO
      - PORT=5000
    env_file:
      - .env
    volumes:
      - ./database:/app/database
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - deepdoc-network
    command: ["python", "api_enhanced.py"]

  # Optional: Database backup service
  backup:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: deepdoc-backup
    environment:
      - DATABASE_PATH=/app/database
      - BACKUP_PATH=/app/backups
    env_file:
      - .env
    volumes:
      - ./database:/app/database:ro
      - ./backups:/app/backups
    restart: unless-stopped
    networks:
      - deepdoc-network
    # Run backup script every 24 hours
    command: >
      sh -c "while true; do
        echo 'Creating database backup...'
        cp -r /app/database /app/backups/database_$(date +%Y%m%d_%H%M%S)
        echo 'Backup completed'
        sleep 86400
      done"

volumes:
  redis_data:
    driver: local

networks:
  deepdoc-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
